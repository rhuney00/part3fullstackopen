{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","setFilterName","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","persons","setPersons","servicePersons","setMessage","setMessageType","type","onClick","preventDefault","filter","person","name","length","window","confirm","newContact","number","id","update","then","returnedPerson","map","setTimeout","create","concat","Persons","filterName","filterNames","includes","deletePerson","catch","error","Notification","message","className","baseURL","getAll","axios","get","response","data","newObject","post","put","delete","App","useState","messageType","useEffect","intialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c06decd8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ value, setFilterName}) => {\n\n    const handleOnChangeFilterName = (event) => {\n\n        setFilterName(event.target.value);\n\n    }\n\n    return (\n\n        <div>\n            filter shown with <input value={value} onChange={handleOnChangeFilterName}/>\n        </div>\n\n    );\n\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({newName, setNewName, newNumber, setNewNumber, persons, setPersons, servicePersons, setMessage, setMessageType}) => {\n\n    const saveContact = (event) => {\n\n      event.preventDefault();\n  \n      if (persons.filter(person => person.name === newName).length > 0) {\n  \n        if(window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n\n          const newContact = {\n            name: newName,\n            number: newNumber,\n          }\n\n          const id = persons.filter(person => person.name === newName)[0].id;\n\n          servicePersons\n            .update(id, newContact)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== id ? person : returnedPerson));\n            });\n          \n          setMessage(`Updated the phone number of ${newContact.name}`);\n          setMessageType('good');\n          setTimeout(() => {\n            setMessage(null);\n            setMessageType(null);\n          }, 5000);\n\n        }\n  \n      } else {\n  \n        const newContact = {\n          name: newName,\n          number: newNumber,\n        }\n\n        servicePersons\n          .create(newContact)\n          .then(returnedPerson => {\n\n            setPersons(persons.concat(returnedPerson));\n\n          });\n        \n        setMessage(`Added ${newContact.name}`);\n        setMessageType('good');\n        setTimeout(() => {\n          setMessage(null);\n          setMessageType(null);\n        }, 5000);\n    \n      }\n    \n    }\n    \n    const handleOnChangeName = (event) => {\n\n        setNewName(event.target.value);\n    \n      }\n    \n      const handleOnChangeNumber = (event) => {\n    \n        setNewNumber(event.target.value);\n    \n      }\n\n    return (\n\n        <form>\n            <div>\n                name: <input value={newName} onChange={handleOnChangeName}/>\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleOnChangeNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\" onClick={saveContact}>save</button>\n            </div>\n        </form>\n\n    )\n\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = ({ persons, setPersons, filterName, servicePersons, setMessage, setMessageType }) => {\n\n    const filterNames = filterName.length > 0 ? persons.filter(person => person.name.includes(filterName)) : persons;\n    \n    const deletePerson = (id) => {\n\n        if (window.confirm(`Delete ${persons.filter(person => person.id === id)[0].name}`)) {\n\n            servicePersons\n                .deletePerson(id)\n                .then(() => setPersons(persons.filter(person => person.id !== id)))\n                .then(() => {\n                    setMessage(`Deleted ${persons.filter(person => person.id === id)[0].name} from phonebook`);\n                    setMessageType('good');\n                    setTimeout(() => {\n                        setMessage(null);\n                        setMessageType(null);\n                    }, 5000);\n                })\n                .catch(error => {\n                    setMessage(`Information of ${persons.filter(person => person.id === id)[0].name} has already been removed from server. Will remove contact now.`);\n                    setMessageType('bad');\n                    setPersons(persons.filter(person => person.id !== id));\n                    setTimeout(() => {\n                        setMessage(null);\n                        setMessageType(null);\n                    }, 5000);\n                });\n\n        }\n\n    }\n\n    return (\n\n        <div>\n            { filterNames.map(person => {\n\n                return (\n\n                    <p key={person.id}>\n                        {person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button>\n                    </p>\n\n                    ); \n                }) \n            }\n        </div>\n\n    )\n\n}\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({message, type}) => {\n\n    if (message === null) {\n\n        return null;\n\n    }\n\n    if (type === 'good') {\n\n        return (\n\n            <div className='success'>\n                {message}\n            </div>\n    \n        )\n\n    }\n\n    return (\n\n        <div className='error'>\n            {message}\n        </div>\n\n    )\n\n}\n\nexport default Notification;","import axios from 'axios';\n\nconst baseURL = 'api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseURL}/${id}`);\n    return request.then(response => response.data);\n}\n\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport servicePersons from './services/persons';\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filterName, setFilterName ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ messageType, setMessageType ] = useState(null);\n\n  useEffect(() => {\n    servicePersons\n    .getAll()\n    .then(intialPersons => {\n      setPersons(intialPersons);\n    });\n  }, []);\n\n  return (\n\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={message}\n        type = {messageType} />\n      <Filter\n        value={filterName}\n        setFilterName={setFilterName}/>\n      <h2>Add a new Number</h2>\n      <PersonForm \n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        persons={persons}\n        setPersons={setPersons}\n        servicePersons={servicePersons}\n        setMessage={setMessage} \n        setMessageType={setMessageType}/>\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        setPersons={setPersons}\n        filterName={filterName}\n        servicePersons={servicePersons}\n        setMessage={setMessage}\n        setMessageType={setMessageType} />\n    </div>\n\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}